apiVersion: "1.0.0"

app:
  name: "courses"
  env: "dev"
  version: "1.0"

logger:
  env: "dev" # "prod"
  level: "debug"
  outputs:
    - "stdout"
  error_outputs:
    - "stderr"
  encoding: "json"
  sentry_dsn: ""
  sentry_level: "error"

metrics:
  enable: false
  dsn: "<sentry_dsn_for_service>"

graceful_shutdown:
  delay: "5s"
  wait_timeout: "5s"
  callback_timeout: "2s"

http:
  host: "localhost"
  port: 8080
  read_timeout: "1s"
  write_timeout: "1s"

# TODO or this?
#finances_client:
#  uri: "http://localhost:8084"
#
finances_client:
  uri: "http://localhost:8084/api/v1"

purchase_client:
  uri: "http://localhost:8084/api/v1"
  webhook_base_path: "http://courses-svc:8080/api/v1/user/access/confirm/"

#  "mongodb://localhost:27017,courses?replicaSet=rs0&authSource=admin&readPreference=primaryPreferred"
mongo:
  database: courses
  uri: "mongodb://localhost:27017"

migrations_mongo:
  uri: "mongodb://localhost:27017"
  path: "./xor-go/services/courses/migrations"
  enabled: true

kafka_reader:
  brokers:
    - "kafka:9092"
  topic: "outbound"
  id_group: "courses-service"
  min_bytes: 32
  max_bytes: 2048

kafka_writer:
  broker: "kafka:9092"
  topic: "inbound"

scraper:
  scrape_interval: "10s"

tracer:
  enable: false
  exp_target: "jaeger-all-in-one:4317"
