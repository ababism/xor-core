openapi: 3.0.0
info:
  title: Finances Service
  version: 1.0.6
servers:
  - url: http://localhost:8082/api/v1/finances
paths:
  /bank-accounts/login/{login}:
    get:
      tags:
        - Bank Account
      summary: Get bank account by login
      parameters:
        - in: path
          name: login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountGet'
        '400':
          description: Incorrect bank account login
        '404':
          description: Bank account not found
  /bank-accounts/{id}:
    get:
      tags:
        - Bank Account
      summary: Get bank account by uuid
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountGet'
        '400':
          description: Incorrect bank account login
        '404':
          description: Bank account not found
  /bank-accounts:
    get:
      tags:
        - Bank Account
      summary: List bank accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankAccountGet'
    post:
      tags:
        - Bank Account
      summary: Create a bank account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreate'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Incorrect bank account data
    put:
      tags:
        - Bank Account
      summary: Update a bank account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountUpdate'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Incorrect bank account data
        '404':
          description: Bank account not found
  /bank-accounts/{id}/change-funds:
    put:
      tags:
        - Bank Account
      summary: Change bank account funds
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: newFunds
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful operation
        '400':
          description: Incorrect funds data
        '404':
          description: Bank account not found
  /discounts/{id}:
    get:
      tags:
        - Discount
      summary: Get discount by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountGet'
  /discounts:
    get:
      tags:
        - Discount
      summary: List discounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiscountGet'
    post:
      tags:
        - Discount
      summary: Create a discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountCreate'
      responses:
        '200':
          description: Successful operation
    put:
      tags:
        - Discount
      summary: Update a discount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountUpdate'
      responses:
        '200':
          description: Successful operation
  /discounts/{id}/end:
    patch:
      tags:
        - Discount
      summary: End a discount
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
  /payments/{uuid}:
    get:
      tags:
        - Payment
      summary: Get payment by UUID
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGet'
        '400':
          description: Incorrect payment UUID
        '404':
          description: Payment not found by UUID
  /payments:
    get:
      tags:
        - Payment
      summary: List payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentGet'
    post:
      tags:
        - Payment
      summary: Create a payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreate'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Incorrect payment data
  /payout-requests/{id}:
    get:
      tags:
        - Payout Request
      summary: Get payout request by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutRequestGet'
  /payout-requests:
    get:
      tags:
        - Payout Request
      summary: List payout requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutRequestFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayoutRequestGet'
    post:
      tags:
        - Payout Request
      summary: Create a payout request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutRequestCreate'
      responses:
        '200':
          description: Successful operation
  /payout-requests/{id}/archive:
    put:
      tags:
        - Payout Request
      summary: Archive a payout request
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
  /product/{id}:
    get:
      tags:
        - Product
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGet'
  /product:
    get:
      tags:
        - Product
      summary: List products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGet'
    post:
      tags:
        - Product
      summary: Create a product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '200':
          description: Successful operation
    put:
      tags:
        - Product
      summary: Update a product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Successful operation
  /product/list:
    post:
      tags:
        - Product
      summary: Create many products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductCreate'
      responses:
        '200':
          description: Successful operation
  /product/{id}/disable:
    put:
      tags:
        - Product
      summary: Disable a product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
  /product/price/{uuids}:
    get:
      tags:
        - Product
      summary: Get products price with discounts
      parameters:
        - in: path
          name: uuids
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: Successful operation
  /purchase-requests/{id}:
    get:
      tags:
        - Purchase request
      summary: Get purchase request by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseRequestGet'
  /purchase-requests:
    get:
      tags:
        - Purchase request
      summary: List purchase requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequestFilter'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseRequestGet'
    post:
      tags:
        - Purchase request
      summary: Create a purchase request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequestCreate'
      responses:
        '200':
          description: Successful operation
  /purchase-requests/{id}/archive:
    put:
      tags:
        - Purchase request
      summary: Archive a purchase request
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
components:
  schemas:
    BankAccountData:
      type: object
      properties: { }
    BankAccountGet:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        AccountUUID:
          type: string
          format: uuid
        Login:
          type: string
        Funds:
          type: number
        Data:
          $ref: '#/components/schemas/BankAccountData'
        Status:
          type: string
        LastDealAt:
          type: string
          format: date-time
        CreatedAt:
          type: string
          format: date-time
        LastUpdateAt:
          type: string
          format: date-time
        Payments:
          type: array
          items:
            type: string
            format: uuid
      required:
        - UUID
        - AccountUUID
        - Login
        - Data
        - Status
        - Funds
        - CreatedAt
        - LastUpdateAt
        - Payments
    BankAccountCreate:
      type: object
      properties:
        AccountUUID:
          type: string
          format: uuid
        Login:
          type: string
        Data:
          $ref: '#/components/schemas/BankAccountData'
        Payments:
          type: array
          items:
            type: string
            format: uuid
      required:
        - AccountUUID
        - Login
        - Data
        - Payments
    BankAccountUpdate:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        AccountUUID:
          type: string
          format: uuid
        Login:
          type: string
        Funds:
          type: number
        Data:
          $ref: '#/components/schemas/BankAccountData'
        Status:
          type: string
        LastDealAt:
          type: string
          format: date-time
        Payments:
          type: array
          items:
            type: string
            format: uuid
      required:
        - UUID
        - AccountUUID
        - Login
        - Funds
        - Data
        - Status
        - Payments
    BankAccountFilter:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        AccountUUID:
          type: string
          format: uuid
        Login:
          type: string
        Funds:
          type: number
        Status:
          type: string
    DiscountGet:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        CreatedBy:
          type: string
          format: uuid
        Percent:
          type: number
        StartedAt:
          type: string
          format: date-time
        EndedAt:
          type: string
          format: date-time
        Status:
          type: string
        CreatedAt:
          type: string
          format: date-time
        LastUpdateAt:
          type: string
          format: date-time
      required:
        - UUID
        - CreatedBy
        - Percent
        - StartedAt
        - EndedAt
        - Status
        - CreatedAt
        - LastUpdateAt
    DiscountCreate:
      type: object
      properties:
        CreatedBy:
          type: string
          format: uuid
        Percent:
          type: number
        StartedAt:
          type: string
          format: date-time
        EndedAt:
          type: string
          format: date-time
        Status:
          type: string
      required:
        - CreatedBy
        - Percent
        - StartedAt
        - EndedAt
        - Status
    DiscountUpdate:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        CreatedBy:
          type: string
          format: uuid
        Percent:
          type: number
        StartedAt:
          type: string
          format: date-time
        EndedAt:
          type: string
          format: date-time
        Status:
          type: string
      required:
        - UUID
        - CreatedBy
        - Percent
        - StartedAt
        - EndedAt
        - Status
    DiscountFilter:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        CreatedBy:
          type: string
          format: uuid
        Percent:
          type: number
        Status:
          type: string
    PaymentData:
      type: object
      properties: { }
    PaymentGet:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        Sender:
          type: string
          format: uuid
        Receiver:
          type: string
          format: uuid
        Data:
          $ref: '#/components/schemas/PaymentData'
        URL:
          type: string
        Status:
          type: string
        EndedAt:
          type: string
          format: date-time
        CreatedAt:
          type: string
          format: date-time
      required:
        - UUID
        - Sender
        - Receiver
        - Data
        - URL
        - Status
        - EndedAt
        - CreatedAt
    PaymentCreate:
      type: object
      properties:
        Sender:
          type: string
          format: uuid
        Receiver:
          type: string
          format: uuid
        Data:
          $ref: '#/components/schemas/PaymentData'
        URL:
          type: string
        Status:
          type: string
        EndedAt:
          type: string
          format: date-time
      required:
        - Sender
        - Receiver
        - Data
        - URL
        - Status
        - EndedAt
    PaymentFilter:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        Sender:
          type: string
          format: uuid
        Receiver:
          type: string
          format: uuid
        URL:
          type: string
        Status:
          type: string
        EndedAt:
          type: string
          format: date-time

    PayoutRequestData:
      type: object
      properties: { }
    PayoutRequestGet:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        Receiver:
          type: string
          format: uuid
        Amount:
          type: number
        Data:
          $ref: '#/components/schemas/PayoutRequestData'
        CreatedAt:
          type: string
          format: date-time
      required:
        - UUID
        - Receiver
        - Amount
        - Data
        - CreatedAt
    PayoutRequestCreate:
      type: object
      properties:
        Receiver:
          type: string
          format: uuid
        Amount:
          type: number
        Data:
          $ref: '#/components/schemas/PayoutRequestData'
        CreatedAt:
          type: string
          format: date-time
      required:
        - Receiver
        - Amount
        - Data
        - CreatedAt
    PayoutRequestFilter:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        Receiver:
          type: string
          format: uuid
        Amount:
          type: number
        CreatedAt:
          type: string
          format: date-time
    ProductGet:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        Name:
          type: string
        Info:
          type: string
        Price:
          type: number
        IsAvailable:
          type: boolean
        CreatedAt:
          type: string
          format: date-time
        LastUpdatedAt:
          type: string
          format: date-time
      required:
        - UUID
        - Name
        - Info
        - Price
        - IsAvailable
        - CreatedAt
        - LastUpdatedAt
    ProductCreate:
      type: object
      properties:
        Name:
          type: string
        Info:
          type: string
        Price:
          type: number
        IsAvailable:
          type: boolean
      required:
        - Name
        - Info
        - Price
        - IsAvailable
    ProductUpdate:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        Name:
          type: string
        Info:
          type: string
        Price:
          type: number
        IsAvailable:
          type: boolean
      required:
        - UUID
        - Name
        - Info
        - Price
        - IsAvailable
    ProductFilter:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        Name:
          type: string
        Price:
          type: number
        IsAvailable:
          type: boolean

    PurchaseRequestGet:
      type: object
      required:
        - UUID
        - Products
        - WebhookURL
        - CreatedAt
      properties:
        UUID:
          type: string
          format: uuid
        Sender:
          type: string
          format: uuid
        Receiver:
          type: string
          format: uuid
        Products:
          type: array
          items:
            type: string
            format: uuid
        WebhookURL:
          type: string
        CreatedAt:
          type: string
          format: date-time
    PurchaseRequestCreate:
      type: object
      required:
        - Products
        - WebhookURL
        - CreatedAt
      properties:
        Sender:
          type: string
          format: uuid
        Receiver:
          type: string
          format: uuid
        Products:
          type: array
          items:
            type: string
            format: uuid
        WebhookURL:
          type: string
        CreatedAt:
          type: string
          format: date-time
    PurchaseRequestFilter:
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        Sender:
          type: string
          format: uuid
        Receiver:
          type: string
          format: uuid
        WebhookURL:
          type: string
        CreatedAt:
          type: string
          format: date-time
