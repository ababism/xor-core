name: "Build docker image and push to registry"

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Choose service"
        type: choice
        options:
          - idm
          - notifications
          - feedback
        required: true
  workflow_call:
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_PASSWORD:
        required: true
    inputs:
      service:
        type: string
        required: true

env:
  MASTER_BRANCH: master
  BRANCH_NAME: ${{github.head_ref || github.ref_name}}
  SERVICE_NAME: ${{github.event.inputs.service || inputs.service}}
  DOCKER_REPOSITORY: foxleren/xority-${{github.event.inputs.service || inputs.service}}

jobs:
  build-push-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
#        with:
#          ref: ${{env.BRANCH_NAME}}
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v3.1.0
#
#      - name: Execute Gradle build
#        run: ./gradlew ${{env.SERVICE_NAME}}:build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}

      - name: Build Docker image
        run: docker build -t ${{env.DOCKER_REPOSITORY}} -f xor-java/${{env.SERVICE_NAME}}/Dockerfile --no-cache .

      - name: Tag Docker image
        run: |
          docker tag ${{env.DOCKER_REPOSITORY}} ${{env.DOCKER_REPOSITORY}}:${{env.BRANCH_NAME}}-${GITHUB_SHA::7}
          if [ ${{env.BRANCH_NAME}} == ${{env.MASTER_BRANCH}} ]; then
            docker tag  ${{env.DOCKER_REPOSITORY}} ${{env.DOCKER_REPOSITORY}}:latest
          fi
      - name: Push Docker image
        run: |
          docker push ${{env.DOCKER_REPOSITORY}}:${{env.BRANCH_NAME}}-${GITHUB_SHA::7}
          if [ ${{env.BRANCH_NAME}} == ${{env.MASTER_BRANCH}} ]; then
            docker push ${{env.DOCKER_REPOSITORY}}:latest
          fi
