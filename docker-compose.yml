version: '3.9'

services:
  courses-svc:
    build:
      context: './xor-go/'
      dockerfile: 'courses.Dockerfile'
    image: 'courses-svc:latest'
    ports:
      - "8080:8080"
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_started
      mongo3:
        condition: service_started
    environment:
      - DB_PASSWORD=password

  mongo1:
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    ports:
      - "27017:27017"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017',priority:1},{_id:1,host:'mongo2:27018',priority:0.5},{_id:2,host:'mongo3:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"

  mongo2:
    container_name: mongo2
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27018" ]
    ports:
      - "27018:27018"
    volumes:
      - "mongo2_data:/data/db"
      - "mongo2_config:/data/configdb"

  mongo3:
    container_name: mongo3
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27019" ]
    ports:
      - "27019:27019"
    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"


  finances-svc:
    image: 'finances-svc:latest'
    build:
      context: './xor-go/'
      dockerfile: 'finances.Dockerfile'
    ports:
      - "8082:8082"
    depends_on:
      finances_db:
        condition: service_healthy
    environment:
      - LOGGER_LEVEL=release
      - DB_PASSWORD=${FINANCES_POSTGRES_PASSWORD}

  finances_db:
    restart: always
    image: postgres:latest
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_DB=${FINANCES_POSTGRES_NAME}
      - POSTGRES_HOST=${FINANCES_POSTGRES_HOST}
      - POSTGRES_USER=${FINANCES_POSTGRES_USER}
      - POSTGRES_PASSWORD=${FINANCES_POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d finances_db" ]
      interval: 5s
      timeout: 10s
      retries: 5

networks:
  courses:
    name: courses

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config:

